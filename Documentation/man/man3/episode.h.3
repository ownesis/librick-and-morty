.TH "episode.h" 3 "Fri Jun 3 2022" "Version 1" "librick-and-morty" \" -*- nroff -*-
.ad l
.nh
.SH NAME
episode.h \- Functions and structures for 'episode' API\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stddef\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include 'types\&.h'\fP
.br
\fC#include 'api\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBRM_episode\fP"
.br
.RI "Structure for episode attributes\&. "
.ti -1c
.RI "struct \fBRM_episode_array\fP"
.br
.RI "Structure for an array of \fBRM_episode\fP struct and its length\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBRM_API_URL_EPISODE\fP   RM_API_ENDPOINT '/episode/'"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBRM_episode\fP \fBrm_episode_t\fP"
.br
.ti -1c
.RI "typedef struct \fBRM_episode_array\fP \fBrm_episode_arr_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBrm_episode_t\fP * \fBparse_episode\fP (json_object *jobj)"
.br
.ti -1c
.RI "char * \fBepisode_parse_filter\fP (char *url, \fBrm_episode_t\fP *filter)"
.br
.ti -1c
.RI "void \fBrm_episode_clear\fP (\fBrm_episode_t\fP *episode)"
.br
.RI "This function free the episode array fields and episode\&. "
.ti -1c
.RI "void \fBrm_episode_da_clear\fP (\fBrm_episode_arr_t\fP *episode)"
.br
.RI "This function free all episode fields and episode inside da_array episode\&. "
.ti -1c
.RI "\fBrm_episode_t\fP * \fBrm_episode_get\fP (uint64_t id)"
.br
.RI "This function get all attributs of the episode with the specific ID\&. "
.ti -1c
.RI "\fBrm_episode_arr_t\fP * \fBrm_episode_get_all\fP (\fBrm_episode_t\fP *filter)"
.br
.RI "This function get all episodes and their attributes\&. "
.ti -1c
.RI "\fBrm_episode_arr_t\fP * \fBrm_episode_get_list\fP (uint64_t array_id[], size_t array_len)"
.br
.RI "This function get all attributes of episode with id inside array_id\&. "
.ti -1c
.RI "\fBrm_episode_arr_t\fP * \fBrm_episode_get_page\fP (\fBrm_info_t\fP *info, uint64_t page, \fBrm_episode_t\fP *filter)"
.br
.RI "This function get an array of all episode found in the specified page\&. "
.in -1c
.SH "Detailed Description"
.PP 
Functions and structures for 'episode' API\&. 


.PP
\fBAuthor\fP
.RS 4
ownesis 
.RE
.PP
\fBDate\fP
.RS 4
9 janv\&. 2022
.RE
.PP
\fBSee also\fP
.RS 4
https://rickandmortyapi.com/documentation/#episode 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void rm_episode_clear (\fBrm_episode_t\fP * episode)"

.PP
This function free the episode array fields and episode\&. 
.PP
\fBParameters\fP
.RS 4
\fIctx\fP (rm_episode_t *) Address of rm_episode_t structure to free\&. 
.RE
.PP

.SS "void rm_episode_da_clear (\fBrm_episode_arr_t\fP * episode)"

.PP
This function free all episode fields and episode inside da_array episode\&. 
.PP
\fBParameters\fP
.RS 4
\fIctx\fP (rm_episode_arr_t *) Address of \fBRM_episode_array\fP structure to free`\&. 
.RE
.PP

.SS "\fBrm_episode_t\fP * rm_episode_get (uint64_t uid)"

.PP
This function get all attributs of the episode with the specific ID\&. 
.PP
\fBParameters\fP
.RS 4
\fIid\fP (uint64_t) The ID of the episode to get this attributs\&. 
.RE
.PP
\fBReturns\fP
.RS 4
(rm_episode_t*) Address of struct \fBRM_episode\fP with field filled to free with \fCrm_episode_clear\fP\&. 
.RE
.PP

.SS "\fBrm_episode_arr_t\fP * rm_episode_get_all (\fBrm_episode_t\fP * filter)"

.PP
This function get all episodes and their attributes\&. 
.PP
\fBParameters\fP
.RS 4
\fIfilter\fP (rm_episode_t *) Address of a \fBRM_episode\fP structure to use like filter (only the following field are verifed: name, status, species, type, gender) he can be NULL\&. 
.RE
.PP
\fBReturns\fP
.RS 4
address of struct \fBRM_episode_array\fP to free with \fCrm_da_episode_clear\fP\&. 
.RE
.PP

.SS "\fBrm_episode_arr_t\fP * rm_episode_get_list (uint64_t array_id[], size_t array_len)"

.PP
This function get all attributes of episode with id inside array_id\&. 
.PP
\fBParameters\fP
.RS 4
\fIarray_id\fP (uint64_t[]) An array with the number of ID of characeters to get\&. 
.br
\fIarray_len\fP (size_t) The len of array\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Address of struct \fBRM_episode_array\fP to free with \fCrm_episode_da_clear\fP\&. 
.RE
.PP

.SS "\fBrm_episode_arr_t\fP * rm_episode_get_page (\fBrm_info_t\fP * info, uint64_t page, \fBrm_episode_t\fP * filter)"

.PP
This function get an array of all episode found in the specified page\&. 
.PP
\fBParameters\fP
.RS 4
\fIinfo\fP (rm_info_t *) Address of rm_info_t\&. 
.br
\fIpage\fP (size_t) the page to get\&. 
.br
\fIfilter\fP (rm_episode_t *) Addres of a \fBRM_episode\fP structure to use like filter (only the following field are verifed: name, status, species, type, gender) he can be NULL\&. 
.RE
.PP
\fBReturns\fP
.RS 4
address of struct \fBRM_episode_array\fP to free with \fCrm_episode_da_clear\fP\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for librick-and-morty from the source code\&.
